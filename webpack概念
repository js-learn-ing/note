Entry：入口， Webpack 执行构建的第一步将从 Entry 开始，可抽象成输入
Module：模块，在 Webpack 里一切皆模块，一个模块对应一个文件。 Webpack 会从配置的 Entry 开始递归找出所有依赖的模块。
Chunk：代码块，一个 Chunk 由 多个模块组合而成，用 于代码合并与分割
Loader：模块转换器，用于将模块的原内容按照需求转换成新内容
Plugin：扩展插件，在 Webpack 构建流程中的特定时机注入扩展逻辑，来改变构建结果或做我们想要的事情。
Output：输出结果，在 Webpack 经过一系列处理并得出最终想要的代码后输出结果


Webpack 在启动后会从 Entry里配置的 Module 开始，递归解析 Entry 依赖的所有 Module 。
每找到一个 Module，就会根据配置的 Loader 去找出对应的转换规则，对 Module 进行转换后，
再解析出当前 Module 依赖的 Module 。 这些模块会以 Entry为单位进行分组， 一个 Entry 及其
所有依赖的 Module 被分到一个组也就是一个 Chunk。最后， Webpack 会将所有 Chunk 转换成
文件输出。在整个流程中， Webpack 会在恰当的时机执行 Plugin 里定义的逻辑。


Entry：配置模块的入口．
Output：配置如何输出最终想要的代码。
Module：配置处理模块的规则。
Resolve：配置寻找模块的规则．
Plugins：配置扩展插件。
DevServer：配置 DevServer 
